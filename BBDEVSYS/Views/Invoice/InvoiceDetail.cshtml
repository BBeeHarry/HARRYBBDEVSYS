@model BBDEVSYS.ViewModels.Invoice.InvoiceViewModel
@using BBDEVSYS.Services.Shared
@{
    ViewBag.Title = ViewBag.Title + BBDEVSYS.Content.text.ResourceText.TitleInvoiceList;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SubmitForm", "Invoice", FormMethod.Post, new { enctype = "multipart/form-data", id = "detailForm", @class = "form-horizontal" }))
{
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">@BBDEVSYS.Content.text.ResourceText.BoxData</h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label  ">
                                @Html.LabelFor(m => m.COMPANY_CODE)  :
                            </label>
                            <div class="col-xs-12 col-md-3 true-text " style="font-weight:bold">
                                @Html.DisplayFor(m => m.COMPANY_NAME)
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label  ">
                                @Html.LabelFor(m => m.PAYMENT_ITEMS_CODE)  :
                            </label>
                            <div class="col-xs-12 col-md-4 true-text" style="font-weight:bold">
                                @Html.DisplayFor(m => m.PAYMENT_ITEMS_NAME)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label ">
                                @Html.LabelFor(m => m.INV_MONTH)  :
                            </label>
                            <div class="col-xs-12 col-md-3 true-text" style="font-weight:bold">
                                @Html.DisplayFor(m => m.MONTH_NAME)

                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label ">
                                @Html.LabelFor(m => m.INV_YEAR)  :
                            </label>
                            <div class="col-xs-12 col-md-3 true-text" style="font-weight:bold">
                                @Html.DisplayFor(m => m.YEAR_NAME)
                            </div>

                        </div>



                    </div>
                </div>
            </div>

            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">@BBDEVSYS.Content.text.ResourceText.BoxDetail</h3>

                    <div class="box-tools pull-right">
                        @{ if (Model.FormState == ConstantVariableService.FormStateDisplay)
                            {
                                <h3 class="box-title" style="text-align:right">Data Import Format : @Model.UPLOAD_TYPE_NAME</h3>
                            }
                        }
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="col-md-12">


                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                @Html.LabelFor(m => m.INV_NO)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.INV_NO, new { @class = "form-control " })
                                @Html.ValidationMessageFor(m => m.INV_NO, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label ">
                                @Html.LabelFor(m => m.PRO_NO)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.PRO_NO, new { @class = "form-control " })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label ">
                                @Html.LabelFor(m => m.PRO_REC_DATE)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.PRO_REC_DATE, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker-th" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label ">
                                @Html.LabelFor(m => m.PRO_DUE_DATE)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.PRO_DUE_DATE, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker-th" })
                            </div>

                        </div>
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                @Html.LabelFor(m => m.INV_REC_DATE)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.INV_REC_DATE, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker-th" })
                                @Html.ValidationMessageFor(m => m.INV_REC_DATE, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label true-require-field">
                                @Html.LabelFor(m => m.INV_DUE_DATE)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.INV_DUE_DATE, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker-th" })

                                @Html.ValidationMessageFor(m => m.INV_DUE_DATE, "", new { @class = "text-danger" })
                            </div>

                        </div>


                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label">
                                @Html.LabelFor(m => m.INCLUDE_VAT_AMOUNT)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.INCLUDE_VAT_AMOUNT, new { @class = "form-control decimal2digit", @readonly = true })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label">
                                @Html.LabelFor(m => m.DEDUCT_WHT_AMOUNT)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.DEDUCT_WHT_AMOUNT, new { @class = "form-control decimal2digit", @readonly = true })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label">
                                @Html.LabelFor(m => m.NET_AMOUNT)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.NET_AMOUNT, new { @class = "form-control decimal2digit", @readonly = true })
                                @Html.ValidationMessageFor(m => m.NET_AMOUNT, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label">
                                @Html.LabelFor(m => m.DISCOUNT)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.DISCOUNT, new { @class = "form-control decimal2digit" })
                            </div>

                        </div>
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                @Html.LabelFor(m => m.VAT)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.VAT, new { @class = "form-control ", Value = "7" })
                                @Html.ValidationMessageFor(m => m.VAT, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label true-require-field">
                                @Html.LabelFor(m => m.WHT)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.WHT, new { @class = "form-control ", Value = "3" })
                                @Html.ValidationMessageFor(m => m.WHT, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group ">
                            <label class="col-xs-12 col-md-3 true-control-label ">
                                @Html.LabelFor(m => m.INV_APPROVED_BY)
                            </label>
                            <div class="col-xs-12 col-md-4">
                                @Html.DropDownListFor(m => m.INV_APPROVED_BY, new SelectList(Model.UserApprovedList, "Value", "Text"), "", new { @class = "form-control", style = "width:100%;" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label">
                                @Html.LabelFor(m => m.INV_APPROVED_DATE)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.INV_APPROVED_DATE, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker-th" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label ">
                                @Html.LabelFor(m => m.CONDITION_PYM)
                            </label>
                            <div class="col-xs-12 col-md-4">
                                @Html.TextBoxFor(m => m.CONDITION_PYM, new { @class = "form-control ", Value = "Within 30 days Due Net" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label ">
                                @Html.LabelFor(m => m.CURRENCY)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.CURRENCY, new { @class = "form-control ", Value = "THB" })
                                @Html.ValidationMessageFor(m => m.CURRENCY, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label">
                                @Html.LabelFor(m => m.REMARK)
                            </label>
                            <div class="col-xs-12 col-md-4">
                                @Html.TextAreaFor(m => m.REMARK, new { @class = "form-control", rows = 3 })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label true-require-field">
                                @Html.LabelFor(m => m.IS_STATUS)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.DropDownListFor(m => m.IS_STATUS, new SelectList(Model.StatusList, "ValueKey", "ValueText"), new { @class = "form-control", style = "width:100%;" })
                                @Html.ValidationMessageFor(m => m.IS_STATUS, "", new { @class = "text-danger" })
                            </div>
                        </div>



                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-xs-12">
            <div class="box box-success true-box">
                <div class="box-header with-border">
                    <h3 class="box-title">Item</h3>
                    <div class="box-tools pull-right">

                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-12">
                            <button type="button" class="btn btn-success btn-sm authManage" id="addItem">
                                <i class="glyphicon glyphicon-plus"></i>
                                <span class="cust-button-text">เพิ่ม</span>
                            </button>
                            <div>

                                <table id="uploadItemTable" class="table table-striped table-striped table-responsive table-hover dataTable no-footer dtr-inline true-table-detail-item" style="display: block; overflow-x: auto; table-layout: fixed; width:100%; word-wrap:break-word;">

                                    <thead>
                                        <tr>
                                            <th style="min-width:50px;">@BBDEVSYS.Content.text.ResourceText.SEQUENCE</th>
                                            <th style="min-width:200px;">@BBDEVSYS.Content.text.ResourceText.PAYMENT_ITEMS_FEE_ITEM</th>
                                            <th style="min-width:200px;">@BBDEVSYS.Content.text.ResourceText.TRANSACTION</th>
                                            <th style="min-width:200px;">@BBDEVSYS.Content.text.ResourceText.RATE_TRANS</th>
                                            <th style="min-width:200px;">@BBDEVSYS.Content.text.ResourceText.ACTUAL_AMOUNT</th>
                                            <th style="min-width:200px;">@BBDEVSYS.Content.text.ResourceText.RATE_AMT</th>
                                            <th style="min-width:200px;">@BBDEVSYS.Content.text.ResourceText.TOTAL_CHARGE_AMOUNT</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody id="itemBody">



                                        @if (Model.InvoiceDetailList.Count == 0)
                                        {
                                            <tr class="NoDataRowTr"><td class="NoDataRow" colspan="11">@BBDEVSYS.Content.text.ResourceText.Empty</td></tr>
                                        }
                                        else
                                        {
                                            foreach (var item in Model.InvoiceDetailList)
                                            {
                                                Html.RenderPartial("~/Views/Invoice/InvoiceItemDetail.cshtml", item);
                                            }
                                        }


                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
            <div class="col-xs-12 ">

                <button type="button" class="btn btn-warning authDisplay" id="backButton" onclick="goBack('@Model.FormState', '@Url.Action("List", "Invoice", new { Area = "Invoice" })')">
                    <span class="fa fa-chevron-circle-left"></span>
                    <span>@BBDEVSYS.Content.text.ResourceText.ButtonBack</span>
                </button>

                <button type="button" class="btn btn-danger authManage" id="saveButton" onclick="detailActionButton('@Model.FormState', '@Model.FormAction', 'detailForm', 'default', 'default', 'default', 'default', 'default');">
                    <span class="glyphicon glyphicon-save"></span>
                    <span id="saveButtonText">@BBDEVSYS.Content.text.ResourceText.ButtonSave</span>
                </button>
            </div>
</div>

    <div>
        <div id="messagePopup">
            @Html.Partial("~/Views/Shared/MessagePopup.cshtml")
        </div>
    </div>

    <div>
        <div id="confirmPopup">
            @Html.Partial("~/Views/Shared/ConfirmActionPopup.cshtml")
        </div>
    </div>

    <div>
        <div id="confirmBackPopup">
            @Html.Partial("~/Views/Shared/ConfirmBackPopup.cshtml")
        </div>
    </div>
    @Html.HiddenFor(m => m.ID)
                            @Html.HiddenFor(m => m.FormState)
                            @Html.HiddenFor(m => m.FormAction)
                            @*@Html.HiddenFor(m => m.IS_STATUS)*@

                            @Html.HiddenFor(m => m.CCT_CODE)
                            @Html.HiddenFor(m => m.COST_CENTER)
                            @Html.HiddenFor(m => m.GL_ACCOUNT)
                            @Html.HiddenFor(m => m.FUND_CODE)

                            @Html.HiddenFor(m => m.CREATE_BY)
                            @Html.HiddenFor(m => m.CREATE_DATE)
                            @Html.HiddenFor(m => m.MODIFIED_BY)
                            @Html.HiddenFor(m => m.MODIFIED_DATE)

                            @Html.HiddenFor(m => m.INV_APPROVED_BY)
                            @Html.HiddenFor(m => m.INV_APPROVED_DATE)
                            @Html.HiddenFor(m => m.INV_MONTH)
                            @Html.HiddenFor(m => m.INV_YEAR)
                            @Html.HiddenFor(m => m.COMPANY_CODE)
                            @Html.HiddenFor(m => m.PAYMENT_ITEMS_CODE)
                            @Html.HiddenFor(m => m.PAYMENT_ITEMS_NAME)
                            @Html.HiddenFor(m => m.CHANNELS)

                            @Html.HiddenFor(m => m.UPLOAD_TYPE)

                            @Html.HiddenFor(m => m.INV_NO)
                            @Html.HiddenFor(m => m.PRO_NO)
                            @Html.HiddenFor(m => m.INV_REC_BY)
                            @Html.HiddenFor(m => m.INV_REC_DATE)
                            @Html.HiddenFor(m => m.INV_DUE_DATE)
                            @Html.HiddenFor(m => m.VAT)
                            @Html.HiddenFor(m => m.WHT)


                            }

<script type="text/javascript">

    //Callback function when click ok button on confirmation popup
    function okActionCallback() {
        detailOkActionPopupButton($('#FormState').val(), $('#FormAction').val(), 'detailForm', '@Url.Action("List", "Invoice", new { Area = "Invoice" })')
    }
    function setEmpltyUploadTable() {
        $("#itemBody").html('<tr><td class="NoDataRow" colspan="6">@BBDEVSYS.Content.text.ResourceText.Empty</td></tr>');
    }
    function calTotalAmt() {
        $(this).focus();
        var amtTotalSum = 0;
        $('#itemBody tr').each(function () {
            var Trxn = 0;
            var Amt = 0;
            var rateTrxn = 0;
            var rateAmt = 0;
            var valamtTrxn = '';
            var valamtAmt = '';
            var valamtRateTrxn = '';
            var valamtRateAmt = '';
            var rowId = $(this).find('input[name="InvoiceDetailList.index"]').val();
            var $idTotal = $("#InvoiceDetailList_" + rowId + "__TOTAL_CHARGE_AMOUNT");
            var $idTrxn = $("#InvoiceDetailList_" + rowId + "__TRANSACTIONS");
            var $idRateTrxn = $("#InvoiceDetailList_" + rowId + "__RATE_TRANS");
            var $idAmt = $("#InvoiceDetailList_" + rowId + "__ACTUAL_AMOUNT");
            var $idRateAmt = $("#InvoiceDetailList_" + rowId + "__RATE_AMT");

            valamtTrxn = $idTrxn.val();
            valamtAmt = $idAmt.val();
            valamtRateTrxn = $idRateTrxn.val();
            valamtRateAmt = $idRateAmt.val();

            if (valamtTrxn == '') {
                valamtTrxn = '0';
            }
            if (valamtAmt == '') {
                valamtAmt = '0';
            }
            if (valamtRateTrxn == '') {
                valamtRateTrxn = '0';
            }
            if (valamtRateAmt == '') {
                valamtRateAmt = '0';
            }
            Trxn = parseFloat(valamtTrxn)
            Amt = parseFloat(valamtAmt)
            rateTrxn = parseFloat(valamtRateTrxn)
            rateAmt = parseFloat(valamtRateAmt)
            if (!isNaN(Trxn) || !isNaN(Amt)) {
                if (isNaN(rateTrxn) || rateTrxn <= 0) {
                    Trxn = 0;//Trxn
                }
                else {
                    Trxn = Trxn * rateTrxn
                }
                if (isNaN(rateAmt) || rateAmt <= 0) {
                    Amt = Amt
                }
                else {
                    Amt =Amt * (rateAmt / 100)
                }

                amtTotalSum = Trxn + Amt
                if (amtTotalSum < 0) {
                    amtTotalSum = 0
                }
                if ($(this).find('.detail-item-delete-flag').val() == "true") {
                    if (isNaN(rateTrxn) || rateTrxn <= 0) {
                        Trxn = 0;//Trxn
                    }
                    else {
                        Trxn = Trxn * rateTrxn
                    }
                    if (isNaN(rateAmt) || rateAmt <= 0) {
                        Amt = Amt
                    }
                    else {
                        Amt = Amt * (rateAmt / 100)
                    }
                    amtTotalSum -= Trxn + Amt;
                }
            }

            // $($idTotal).val(numberWithCommas(amtTotalSum.toFixed(2)))
            $($idTotal).val(amtTotalSum)
        });
        sumAmountItem();
        calInclVat();
        calDeductWht();

    }
    function calDeductWht() {
        var amtDeductSum = 0;
        var amtIncl = 0;
        $('#itemBody tr').each(function () {
            //var amtIncl = 0;
            var amtTotal = 0;
            var valamtTotal = '';
            var valamtIncl = '';
            var rowId = $(this).find('input[name="InvoiceDetailList.index"]').val();
            var $idTotal = $("#InvoiceDetailList_" + rowId + "__TOTAL_CHARGE_AMOUNT");

            valamtTotal = $idTotal.val();
            valamtIncl = $("#INCLUDE_VAT_AMOUNT").val();
            if (valamtTotal == '') {
                valamtTotal = '0';
            }
            if (valamtIncl == '') {
                valamtIncl = '0';
            }

            amtTotal = parseFloat(valamtTotal)
            amtIncl = parseFloat(valamtIncl)
            if (!isNaN(amtIncl) && !isNaN(amtTotal)) {
                amtDeductSum += amtTotal
                if (amtDeductSum < 0) {
                    amtDeductSum = 0
                }
                if ($(this).find('.detail-item-delete-flag').val() == "true") {
                    amtDeductSum -= amtTotal;
                }
            }
        });
        amtDeductSum = amtIncl - (amtDeductSum * 0.03)
        //$("#DEDUCT_WHT_AMOUNT").val(numberWithCommas(amtDeductSum.toFixed(2)))
        $("#DEDUCT_WHT_AMOUNT").val(amtDeductSum)
    }
    function calInclVat() {
        var amtInclSum = 0;
        $('#itemBody tr').each(function () {
            var amtIncl = 0;
            var valamtTotal = '';
            var rowId = $(this).find('input[name="InvoiceDetailList.index"]').val();
            var $idTotal = $("#InvoiceDetailList_" + rowId + "__TOTAL_CHARGE_AMOUNT");
            valamtTotal = $idTotal.val();

            if (valamtTotal == '') {
                valamtTotal = '0';
            }

            amtTotal = parseFloat(valamtTotal)

            if (!isNaN(amtTotal)) {
                amtInclSum += amtTotal
                if (amtInclSum < 0) {
                    amtInclSum = 0
                }
                if ($(this).find('.detail-item-delete-flag').val() == "true") {
                    amtInclSum -= amtTotal;
                }
            }
        });
        amtInclSum = amtInclSum * 1.07
        // $("#INCLUDE_VAT_AMOUNT").val(numberWithCommas(amtInclSum.toFixed(2)));//
        $("#INCLUDE_VAT_AMOUNT").val(amtInclSum)
    }
    function sumAmountItem() {
        var amountSum = 0;

        $('#itemBody tr').each(function () {
            var valueAmount = '';
            var amountDec = 0;
            var rowId = $(this).find('input[name="InvoiceDetailList.index"]').val();

            var $id = $("#InvoiceDetailList_" + rowId + "__TOTAL_CHARGE_AMOUNT");

            valueAmount = $id.val();

            if (valueAmount == '') {
                valueAmount = '0';
            }

            amountDec = parseFloat(valueAmount)

            if (!isNaN(amountDec)) {
                amountSum += amountDec
                if ($(this).find('.detail-item-delete-flag').val() == "true") {
                    amountSum -= amountDec;
                }
            }

        });
        //$("#NET_AMOUNT").val(numberWithCommas(amountSum.toFixed(2)))
        $("#NET_AMOUNT").val(amountSum)
    }
    function numberWithCommas(number) {
        var parts = number.toString().split(".");
        parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        return parts.join(".");
    }

    function onChangeChargingItem(res) {

        var $idFeeItem = "";
        var $idFeeItemName = "";
        var $idFeeItemCode = "";

        $("#itemBody tr").each(function () {

            var rowId = $(this).find('input[name="InvoiceDetailList.index"]').val();
            $idFeeItem = $("#InvoiceDetailList_" + rowId + "__PAYMENT_ITEMS_FEE_ITEM")
            $idFeeItemdis = $("#InvoiceDetailList_" + rowId + "__PAYMENT_ITEMS_FEE_ITEM_dis")
            $idFeeItemCode = "#InvoiceDetailList_" + rowId + "__PAYMENT_ITEMS_FEE_ITEM_Code";

        });
        $idFeeItemName = $("#" + res.id + " [value=" + res.value + "]").text();


        $idFeeItemdis.val($idFeeItemName);
        $idFeeItem.val($idFeeItemdis.val());


    }
    function onChangeGetChargingItem() {

        var $idFeeItem = "";
        var $idFeeItemdis = "";
        var res = "";
        $("#itemBody tr").each(function () {

            var rowId = $(this).find('input[name="InvoiceDetailList.index"]').val();
            $idFeeItemdis = $("#InvoiceDetailList_" + rowId + "__PAYMENT_ITEMS_FEE_ITEM_dis")
            $idFeeItem = $("#InvoiceDetailList_" + rowId + "__PAYMENT_ITEMS_FEE_ITEM")
            var $idFeeItemCode = "#InvoiceDetailList_" + rowId + "__PAYMENT_ITEMS_FEE_ITEM_Code"
            //onChangeChargingItem($($idFeeItemCode).val());
        });
        $idFeeItem.val($idFeeItemdis.val())
    }
    $(document).ready(function () {
        //Set UI from form state (readonly, editable etc.)
        detailSetFormUI($('#FormState').val())//--------------------------------------------------

        //Generate Amount Callculate calTotalAmt
        calTotalAmt();

        //GEt Text Change Fee Item
        //onChangeGetChargingItem();

        $("#addItem").click(function () {
            $('#itemBody tr.NoDataRowTr').remove();
            $('#confirmDiv').modal('hide');
            var $this = $(this);
            var sequence = 0;
            var companyCode = $("#COMPANY_CODE").val();
            var pymItems = $("#PAYMENT_ITEMS_NAME").val();
            var $td = $('#itemBody tr');
            var max = 0;
            $.each($td, function () {
                if (parseInt($(this).text()) > max) {
                    max = parseInt($(this).text())
                }
            });

            if ($('#FormState').val() == '@ConstantVariableService.FormStateCreate' || $('#FormState').val() == '@ConstantVariableService.FormStateCopy') {
                sequence = parseInt($('#itemBody tr').length) + 1;
            }
            if ($('#FormState').val() == '@ConstantVariableService.FormStateEdit') {
                sequence = max + 1;
            }


            $this.button("loading");
            $.ajax({
                url: '@Url.Action("AddItem", "Invoice", new { Area = "Invoice" })',
                data: {
                    "sequence": sequence,
                    "companyCode": companyCode,
                    "pymItems": pymItems
                },
                cache: false,
                success: function (html) {

                    $("#itemBody").append(html);
                }
            }).done(function (result) {
                $this.button('reset');
            });
            return false;
        });
    });
</script>
