@model BBDEVSYS.ViewModels.CenterSetting.PaymentItems.PaymentItemsViewModel
@using BBDEVSYS.Services.Shared
@{
    ViewBag.Title = ViewBag.Title + BBDEVSYS.Content.text.ResourceText.TitlePaymentItemList;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SubmitForm", "PaymentItems", FormMethod.Post, new { enctype = "multipart/form-data", id = "detailForm", @class = "form-horizontal" }))
{
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">@BBDEVSYS.Content.text.ResourceText.BoxDetail</h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                @Html.LabelFor(m => m.COMPANY_CODE)
                            </label>
                            <div class="col-xs-12 col-md-6">
                                @Html.DropDownListFor(m => m.COMPANY_CODE, new SelectList(Model.CompanyLst, "Value", "Text"), "", new { @class = "form-control", style = "width:100%;" })
                                @Html.ValidationMessageFor(m => m.COMPANY_CODE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @*<label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                    @Html.LabelFor(m => m.PAYMENT_ITEMS_CODE)
                                </label>
                                <div class="col-xs-12 col-md-3">
                                    @Html.TextBoxFor(m => m.PAYMENT_ITEMS_CODE, new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.PAYMENT_ITEMS_CODE, "", new { @class = "text-danger" })
                                </div>*@
                            <label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                @Html.LabelFor(m => m.PAYMENT_ITEMS_NAME)
                            </label>
                            <div class="col-xs-12 col-md-6">
                                @Html.TextBoxFor(m => m.PAYMENT_ITEMS_NAME, new { @class = "form-control " })
                                @Html.ValidationMessageFor(m => m.PAYMENT_ITEMS_NAME, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                @Html.LabelFor(m => m.GL_ACCOUNT)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.GL_ACCOUNT, new { @class = "form-control " })
                                @Html.ValidationMessageFor(m => m.GL_ACCOUNT, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label true-require-field">
                                @Html.LabelFor(m => m.COST_CENTER)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.COST_CENTER, new { @class = "form-control " })
                                @Html.ValidationMessageFor(m => m.COST_CENTER, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label">
                                @Html.LabelFor(m => m.FUND_CODE)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.FUND_CODE, new { @class = "form-control " })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label true-require-field">
                                @Html.LabelFor(m => m.CHANNELS)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @* @Html.TextBoxFor(m => m.CHANNELS, new { @class = "form-control " })*@
                                @Html.DropDownListFor(m => m.CHANNELS, new SelectList(Model.ChannelsList, "ValueText", "ValueText"), "", new { @class = "form-control input-sm col-md-2", style = "width:100%;" })
                                @Html.ValidationMessageFor(m => m.CHANNELS, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label">
                                @Html.LabelFor(m => m.Supplier)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.TextBoxFor(m => m.Supplier, new { @class = "form-control" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label">
                                @Html.LabelFor(m => m.REMARK)
                            </label>
                            <div class="col-xs-12 col-md-4">
                                @Html.TextAreaFor(m => m.REMARK, new { @class = "form-control", rows = 3 })
                            </div>

                        </div>
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                @Html.LabelFor(m => m.DURATION)
                            </label>
                            <div class="col-xs-12 col-md-3">
                                @Html.DropDownListFor(m => m.DURATION, new SelectList(Model.DurationList, "ValueKey", "ValueText"), "", new { @class = "form-control input-sm col-md-2", style = "width:100%;" })
                                @Html.ValidationMessageFor(m => m.DURATION, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-xs-12 col-md-2 true-control-label true-require-field">
                                @Html.LabelFor(m => m.IS_ACTIVE)
                            </label>
                            <div class="col-xs-12 col-md-4">
                                @Html.DropDownListFor(m => m.IS_ACTIVE, new SelectList(Model.IsActionList, "ValueKey", "ValueText"), "", new { @class = "form-control input-sm col-md-2", style = "width:100%;" })
                                @Html.ValidationMessageFor(m => m.IS_ACTIVE, "", new { @class = "text-danger" })
                            </div>

                        </div>



                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-xs-12">
            <div class="box box-success true-box">
                <div class="box-header with-border">
                    <h3 class="box-title">Item</h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-12">
                            <button type="button" class="btn btn-success btn-sm authManage" id="addItem">
                                <i class="glyphicon glyphicon-plus"></i>
                                <span class="cust-button-text">เพิ่ม</span>
                            </button>
                            <div>

                                @*<table id="uploadItemTable" class="table table-striped table-striped table-responsive table-hover dataTable no-footer dtr-inline true-table-detail-item" style="display: block; overflow-x: auto; table-layout: fixed; width:100%; word-wrap:break-word;">*@
                                <table class="table table-striped table-striped table-hover dataTable no-footer dtr-inline true-table-detail-item">

                                    <thead>
                                        <tr>
                                            <th>@BBDEVSYS.Content.text.ResourceText.SEQUENCE</th>
                                            <th>@BBDEVSYS.Content.text.ResourceText.Charge</th>
                                            <th>@BBDEVSYS.Content.text.ResourceText.FEE_TYPE</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody id="itemBody">
                                        @foreach (var item in Model.pymItemsChargeList)
                                        {
                                            Html.RenderPartial("~/Views/CenterSetting/PaymentItems/PaymentItemsDetailItem.cshtml", item);
                                        }
                                        @*@if (Model.pymItemsChargeList.Count == 0)
                                            {
                                                <tr class="NoDataRowTr"><td class="NoDataRow" colspan="11">@BBDEVSYS.Content.text.ResourceText.Empty</td></tr>
                                            }
                                            else
                                            {
                                                foreach (var item in Model.pymItemsChargeList)
                                                {
                                                    Html.RenderPartial("~/Views/CenterSetting/PaymentItems/PaymentItemsDetailItem.cshtml", item);
                                                }
                                            }*@


                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">

            <button type="button" class="btn btn-warning authDisplay" id="backButton" onclick="goBack('@Model.FormState', '@Url.Action("List", "PaymentItems", new { Area = "CenterSetting" })')">
                <span class="fa fa-chevron-circle-left"></span>
                <span>@BBDEVSYS.Content.text.ResourceText.ButtonBack</span>
            </button>

            <button type="button" class="btn btn-danger authManage" id="saveButton" onclick="detailActionButton('@Model.FormState', '@Model.FormAction', 'detailForm', 'default', 'default', 'default', 'default');">
                <span class="glyphicon glyphicon-save"></span>
                <span id="saveButtonText">@BBDEVSYS.Content.text.ResourceText.ButtonSave</span>
            </button>
        </div>
    </div>

    <div>
        <div id="messagePopup">
            @Html.Partial("~/Views/Shared/MessagePopup.cshtml")
        </div>
    </div>

    <div>
        <div id="confirmPopup">
            @Html.Partial("~/Views/Shared/ConfirmActionPopup.cshtml")
        </div>
    </div>

    <div>
        <div id="confirmBackPopup">
            @Html.Partial("~/Views/Shared/ConfirmBackPopup.cshtml")
        </div>
    </div>
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.FormState)
    @Html.HiddenFor(m => m.FormAction)

    @Html.HiddenFor(m => m.CCT_CODE)
    @Html.HiddenFor(m => m.COST_CENTER)
    @Html.HiddenFor(m => m.GL_ACCOUNT)
    @Html.HiddenFor(m => m.FUND_CODE)

    @Html.HiddenFor(m => m.CREATE_BY)
    @Html.HiddenFor(m => m.CREATE_DATE)
    @Html.HiddenFor(m => m.MODIFIED_BY)
    @Html.HiddenFor(m => m.MODIFIED_DATE)

    @Html.HiddenFor(m => m.LASTMODIFIED_BY)
    @Html.HiddenFor(m => m.LASTMODIFIED_DATE)

    @Html.HiddenFor(m => m.COMPANY_CODE)
    @Html.HiddenFor(m => m.PAYMENT_ITEMS_CODE)
    @Html.HiddenFor(m => m.PAYMENT_ITEMS_NAME)
    @Html.HiddenFor(m => m.CHANNELS)
    @Html.HiddenFor(m => m.Supplier)

    @Html.HiddenFor(m => m.GROUP_SEQ_CHANNELS)
    @Html.HiddenFor(m => m.SEQ_CHANNELS)



}

<script type="text/javascript">

    //Callback function when click ok button on confirmation popup
    @*function okActionCallback() {
        detailOkActionPopupButton($('#FormState').val(), $('#FormAction').val(), 'detailForm', '@Url.Action("List", "PaymentItems", new { Area = "CenterSetting" })')
    }*@
    function okActionCallback() {
        detailOkActionPopupButton($('#FormState').val(), $('#FormAction').val(), 'detailForm', 'GOBACK')
        @*if (isNoHistory()) {
            var url = '@Url.Action("List", "PaymentItems", new { Area = "CenterSetting" })';


            detailOkActionPopupButton($('#FormState').val(), $('#FormAction').val(), 'detailForm', url)
        }
        else {
            var action = $('#FormAction').val();
            detailOkActionPopupButton($('#FormState').val(), $('#FormAction').val(), 'detailForm', 'GOBACK')
          
        }*@
    }
    function setEmpltyUploadTable() {
        $("#itemBody").html('<tr><td class="NoDataRow" colspan="6">@BBDEVSYS.Content.text.ResourceText.Empty</td></tr>');
    }

    $(document).ready(function () {
        //Set UI from form state (readonly, editable etc.)
        detailSetFormUI($('#FormState').val());

        $("#addItem").click(function () {
            $('#itemBody tr.NoDataRowTr').remove();
            $('#confirmDiv').modal('hide');
            var $this = $(this);
            var sequence = 0;
            var companyCode = $("#COMPANY_CODE").val();
            var pymItems = $("#PAYMENT_ITEMS_NAME").val();
            var $td = $('#itemBody tr');
            var max = 0;
            $.each($td, function () {
                if (parseInt($(this).text()) > max) {
                    max = parseInt($(this).text())
                }
            });

            if ($('#FormState').val() == '@ConstantVariableService.FormStateCreate' || $('#FormState').val() == '@ConstantVariableService.FormStateCopy') {
                sequence = parseInt($('#itemBody tr').length) + 1;
            }
            if ($('#FormState').val() == '@ConstantVariableService.FormStateEdit') {
                sequence = max + 1;
            }


            $this.button("loading");
            $.ajax({
                url: '@Url.Action("AddItem", "PaymentItems", new { Area = "CenterSetting" })',
                data: {
                    "sequence": sequence
                    //"companyCode": companyCode,
                    //"pymItems": pymItems
                },
                cache: false,
                success: function (html) {

                    $("#itemBody").append(html);
                }
            }).done(function (result) {
                $this.button('reset');
            });
            return false;
        });
    });
</script>

