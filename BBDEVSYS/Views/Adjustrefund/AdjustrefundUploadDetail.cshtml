@model BBDEVSYS.ViewModels.Adjustrefund.AdjustrefundUploadViewModel
@using BBDEVSYS.Services.Shared
@{
    ViewBag.Title = ViewBag.Title + BBDEVSYS.Content.text.ResourceText.TitleInvoiceUpload;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SubmitForm", "InvoiceUpload", FormMethod.Post, new { enctype = "multipart/form-data", id = "detailForm", @class = "form-horizontal" }))
{
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">@BBDEVSYS.Content.text.ResourceText.BoxDetail</h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="col-md-12">
                    
                        <div class="form-group">
                            <label class="col-xs-12 col-md-3 true-control-label true-require-field">
                                @BBDEVSYS.Content.text.ResourceText.File
                            </label>
                            <div class="col-xs-12 col-md-9">
                                <span class="btn btn-danger btn-sm fileinput-button authManage" id="addAttachment">
                                    <i class="glyphicon glyphicon-plus"></i>
                                    <span class="cust-button-text">@BBDEVSYS.Content.text.ResourceText.BrowseFile</span>
                                    <input id="fileUpload" type="file" name="files[]" class="file-upload">
                                </span>
                                <div>
                                    <input type="hidden" id="lastSavedFilename" />
                                    <input type="hidden" id="attachFileNameVisible" value="true" />
                                    <input type="hidden" id="attachDocTypeValueType" value="" />
                                    <input type="hidden" id="attachSingleFile" value="true" />
                                    <input type="hidden" id="attachValidationType" value="UPLOADDATA" />
                                    <table class="no-footer" id="attachmentTable">
                                        <tbody id="attachmentBody">
                                            @foreach (var item in Model.AttachmentList)
                                            {
                                                Html.RenderPartial("~/Views/Shared/AttachmentItem.cshtml", item);
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                   

                    </div>

                    <div class="row">
                        <div class="col-xs-12" style="padding-top: 20px">
                            <div>
                                <div class="col-xs-12" style="text-align:right">
                                     <table id="uploadItemTable" class="table table-striped table-hover no-footer dtr-inline true-table-detail-item table-fix-column" style="display: block; overflow-x: auto; table-layout: fixed; width: 100%">
                                        <thead id="uploadItemHeader">
                                            <tr>
                                               
                                            </tr>

                                        </thead>
                                        <tbody id="uploadItemBody">
                                          

                                        </tbody>
                                    </table>
                                </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-xs-12">

            <button type="button" class="btn btn-warning authDisplay" id="infoBackButton" onclick="actionButtonBack();">
                <span class="fa fa-chevron-circle-left"></span>
                <span>@BBDEVSYS.Content.text.ResourceText.ButtonBack</span>
            </button>
            @*<button type="button" class="btn btn-info authManage" id="verifyButton" onclick="actionButton('@ConstantVariableService.FormActionValidate');">
                <span class="glyphicon glyphicon-check"></span>
                <span id="verifyButtonText">@BBDEVSYS.Content.text.ResourceText.ButtonValidate</span>
            </button>*@
            <button type="button" class="btn btn-danger authManage" id="uploadButton" onclick="actionButton('@ConstantVariableService.FormActionCreate');">
                <span class="fa fa-upload"></span>
                <span id="uploadButtonText">@BBDEVSYS.Content.text.ResourceText.ButtonUpload</span>
            </button>
          
        </div>
    </div>


    <div>
        <div id="messagePopup">
            @Html.Partial("~/Views/Shared/MessagePopup.cshtml")
        </div>
    </div>

    <div>
        <div id="confirmPopup">
            @Html.Partial("~/Views/Shared/ConfirmActionPopup.cshtml")
        </div>
    </div>

    <div>
        <div id="confirmBackPopup">
            @Html.Partial("~/Views/Shared/ConfirmBackPopup.cshtml")
        </div>
    </div>

    @Html.Partial("Javascript/AttachmentJavaScript")
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.FormState)
    @Html.HiddenFor(m => m.FormAction)

    @Html.HiddenFor(m => m.CREATE_BY)
    @Html.HiddenFor(m => m.CREATE_DATE)
    @Html.HiddenFor(m => m.MODIFIED_BY)
    @Html.HiddenFor(m => m.MODIFIED_DATE)

    @Html.HiddenFor(m => m.UploadStatus)
    @Html.HiddenFor(m => m.UPLOAD_DATE)
    @Html.HiddenFor(m => m.UPLOAD_BY)
   

}
<script type="text/javascript">

    function onChangeCritiria() {
        deleteAllAttachFile('attachmentTable');
        setEmpltyUploadTable();
    }

    function setEmpltyUploadTable() {
        $("#uploadItemBody").html('<tr><td class="NoDataRow" colspan="6">@BBDEVSYS.Content.text.ResourceText.Empty</td></tr>');
    }

    function callbackDeleteAttachFile(button) {
        //Clear upload item table
        setEmpltyUploadTable()
    }

    function callbackDeleteAllAttachFile(tableID) {
        //Clear upload item table
        setEmpltyUploadTable()
    }
   
    function callbackAddAttachFile() {
        var fileName = $('#lastSavedFilename').val();
        var row = $('#uploadItemBody').children('tr:first');

        LoadingRow(row, 'on', true)
        blockUI();

        $.ajax({
            url: '@Url.Action("ImportExcel", "InvoiceUpload", new { Area = "Invoice" })',
            data: {
                "fileName": fileName

            },
            cache: false,
            success: function (response) {
                if (response.success) {
                    $("#uploadItemBody").html(response.html);
                }
                else {
                    ////setEmpltyUploadTable();
                    ////Remove uploaded file
                    //var message = '';
                    //for (var i = 0; i < response.errorList.length; i++) {
                    //    message = message + response.errorList[i].Message + "<br />";
                    //    console.log(message)
                    //}

                    deleteAllAttachFile('attachmentTable');
                    displayMessagePopup("@BBDEVSYS.Content.text.ResourceText.PopupErrorHeader", message, "E", "");

                    row = $('#uploadItemBody').children('tr:first');
                    LoadingRow(row, 'off', true)
                    setEmpltyUploadTable();
                }

                unblockUI();
               
            }
        }).done(function (result) {
           
        });

    }
    function actionButton(formAction)
    {
        $('#FormAction').val(formAction);
        var headerMessage = "default";
        var bodyMessage = "default";

        if (formAction == '@ConstantVariableService.FormActionValidate') {
            headerMessage = '@BBDEVSYS.Content.text.ResourceText.PopupConfirmValidateHeader';
            bodyMessage = '@BBDEVSYS.Content.text.ResourceText.PopupConfirmValidateBody';
        }
        else if (formAction == '@ConstantVariableService.FormActionCreate') {
            headerMessage = '@BBDEVSYS.Content.text.ResourceText.PopupConfirmUploadJobHeader';
            bodyMessage = '@BBDEVSYS.Content.text.ResourceText.PopupConfirmUploadJobBody';
        }

        detailActionButton('@Model.FormState', formAction, 'detailForm', headerMessage, bodyMessage, 'default');
    }

    function actionButtonBack() {
        goBack('@Model.FormState', '@Url.Action("List", "InvoiceUpload", new { Area = "Invoice" })');
    }

 

    //Callback function when click ok button on confirmation popup
    function okActionCallback() {
        if (isNoHistory()) {
            var url = '@Url.Action("List", "InvoiceUpload", new { Area = "Invoice" })';
           

            detailOkActionPopupButton($('#FormState').val(), $('#FormAction').val(), 'detailForm', url)
        }
        else {
            var action = $('#FormAction').val();

            if (action == '@ConstantVariableService.FormActionValidate') {
                detailOkActionPopupButton($('#FormState').val(), $('#FormAction').val(), 'detailForm', 'RedirectCallbackOkAction')
            }
            else if (action == '@ConstantVariableService.FormActionCreate') {
                detailOkActionPopupButton($('#FormState').val(), $('#FormAction').val(), 'detailForm', 'GOBACK')
            }
        }
    }
    function RedirectCallbackOkAction() {
        //Prevent redirect page
    }
    $(document).ready(function () {
        //Set UI from form state (readonly, editable etc.)
        detailSetFormUI($('#FormState').val())

        //Set attachment column visibility for multiple attachment
        setColumnVisibility('attachmentDiv');
        //Set attachment column visibility for MC tracking attachment
        setColumnVisibility('InternalAttachmentDiv');


        //ModifyCollectionItemName('uploadItemBody');

    });
</script>

























