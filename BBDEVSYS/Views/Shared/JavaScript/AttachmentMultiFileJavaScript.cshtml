@using BBDEVSYS.Services.Shared
<script type="text/javascript">

    function deleteAttachFile(button, uniqueKey) {

        $(button).parents("tr").css("display", "none");
        $("#deleteflag_" + uniqueKey).val(true);



        //Get div id
        var attachmentDivID = getAttachmentDivID($(button).parents("tr").parents("tbody").parents("table"));
        //Check attach only single file
        var attachSingleFile = $(attachmentDivID + '#attachSingleFile').val();
        if (attachSingleFile) {
            if (attachSingleFile.toUpperCase() === "TRUE") {
                $(attachmentDivID + '#addAttachment').show();
            }
        }



        //Callback function
        if ($.isFunction(window.callbackDeleteAttachFile)) {
            callbackDeleteAttachFile(button);
        }
    }

    function deleteAllAttachFile(tableID) {

        //Set delete flag and hide row for all attachment item
        $('#' + tableID + ' > tbody > tr').each(function () {
            $this = $(this);
            $this.css("display", "none");
            $this.find("input.deleteAttachFlag").val(true)
        });

        //Check attach only single file
        var attachSingleFile = $('#attachSingleFile').val();
        if (attachSingleFile) {
            if (attachSingleFile.toUpperCase() === "TRUE") {
                $('#addAttachment').show();
            }
        }



        //Callback function
        if ($.isFunction(window.callbackDeleteAllAttachFile)) {
            callbackDeleteAllAttachFile(tableID);
        }
    }

    function waitForElement(elementPath, countLoop, callBack) {

        window.setTimeout(function () {
            if ($(elementPath).length) {
                callBack(elementPath, $(elementPath));
            } else {
                countLoop++;
                if (countLoop < 10)
                    waitForElement(elementPath, countLoop, callBack);
            }
        }, 500)
    }


    function previewPhoto(input) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#previewPhoto').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    function deletePhoto() {
        $.ajax({
            dataType: 'json',
            url: '@Url.Action("DeletePhoto", "Attachment", new { Area = "Shared" })?' + "fileName=" + $("#PhotoSavedFilename").val(),
            cache: false,
            success: function (response) {
                if (response != null && response.success) {
                    var previewNoPhoto = $('#PreviewNoPhoto').val();
                    $('#previewPhoto').attr('src', previewNoPhoto);
                    $('#DeletedPhotoFlag').val(true);

                    $('#Photo_DeletedPhotoFlag').val(true);//For send data to model when submit form

                } else {

                }
            },
        });
    }

    function setColumnVisibility(attachmentDivID) {

        if (attachmentDivID) {
            if (!attachmentDivID.match('^#')) {
                attachmentDivID = '#' + attachmentDivID
            }

            attachmentDivID = attachmentDivID + ' ';
        }
        else {
            attachmentDivID = '';
        }

        //console.log("div id : " + attachmentDivID);
        //console.log("Doc type " + $(attachmentDivID + "#attachDocumentTypeVisible").val());

        var visible = $(attachmentDivID + "#attachDocumentDateVisible").val();
        if (visible) {
            if (visible.toUpperCase() === "TRUE") {
                $(attachmentDivID + '.attachDocumentDateCol').show();
            }
        }

        visible = $(attachmentDivID + "#attachDocumentTypeVisible").val();
        if (visible) {
            if (visible.toUpperCase() === "TRUE") {
                $(attachmentDivID + '.attachDocumentTypeCol').show();
            }
        }

        visible = $(attachmentDivID + "#attachFileNameVisible").val();
        if (visible) {
            if (visible.toUpperCase() === "TRUE") {
                $(attachmentDivID + '.attachFileNameCol').show();
            }
        }




        visible = $(attachmentDivID + "#attachFileSizeMBVisible").val();
        if (visible) {
            if (visible.toUpperCase() === "TRUE") {
                $(attachmentDivID + '.attachFileSizeMBCol').show();
            }
        }

        visible = $(attachmentDivID + "#attachRemarkVisible").val();
        if (visible) {
            if (visible.toUpperCase() === "TRUE") {
                $(attachmentDivID + '.attachRemarkCol').show();
            }
        }

    }

    function getAttachmentDivID(elem) {

        var attachmentDivID = '';
        if (elem.attr('attach-div-id')) {
            attachmentDivID = '#' + elem.attr('attach-div-id') + ' ';
        }
        else {
            attachmentDivID = '';
        }
        return attachmentDivID;
    }

    $(document).ready(function () {



        //Upload multiple file
        var c = 0;
        $('.file-upload').fileupload({
            add: function (e, data) {
                debugger;
                var attachmentDivID = getAttachmentDivID($(this));


                var documentType = $(attachmentDivID + '#attachDocTypeValueType').val();
                if (!documentType) {
                    documentType = '';
                }

                var encodeFileName = encodeURIComponent(data.originalFiles[c]['name']);

                var validationType = $(attachmentDivID + '#attachValidationType').val();
                if (!validationType) {
                    validationType = 'ATTACHMENT';
                }
                var validationSheet = $(attachmentDivID + '#AttachSheet').val();
                if (!validationSheet) {
                    validationSheet = '';
                }
                var url = '@Url.Action("AddAttachmentLine", "Attachment", new { Area = "Shared" })?' + "fileName=" + encodeFileName + "&fileSize=" + data.originalFiles[c]['size'] + "&documentTypeValueType=" + documentType + "&validationType=" + validationType;

                if (validationSheet != '') {
                    url = '@Url.Action("AddAttachmentLine", "Attachment", new { Area = "Shared" })?' + "fileName=" + encodeFileName + "&fileSize=" + data.originalFiles[c]['size'] + "&documentTypeValueType=" + documentType + "&validationType=" + validationType + "&sheet=" + validationSheet;

                }

                $.ajax({
                    dataType: 'json',
                    url: url,
                    cache: false,
                    success: function (response) {
                        if (response != null && response.success) {
                            c = 0;
                            $.post(response.Url, function (partial) {
                                $(attachmentDivID + "#attachmentBody").append(partial);

                                setColumnVisibility(attachmentDivID);

                                //Check attach only single file
                                var attachSingleFile = $(attachmentDivID + '#attachSingleFile').val();
                                if (attachSingleFile) {
                                    if (attachSingleFile.toUpperCase() === "TRUE") {
                                        $(attachmentDivID + '#addAttachment').hide();
                                    }
                                }

                            });
                            data.originalFiles[c].uploadID = response.fileUniqueKey;
                            $(attachmentDivID + "#lastSavedFilename").val(response.savedFilename);

                            //$("attachmentDivID + #filename_" + response.fileUniqueKey).show()
                            //$("attachmentDivID + #filedownloadurl_" + response.fileUniqueKey).hide()
                            ;
                            data.submit();
                            ;
                        } else {
                            var popupPrefix = $(attachmentDivID + '#attDisplayPopupPrefix').val();

                            displayMessagePopup("@BBDEVSYS.Content.text.ResourceText.PopupErrorHeader", response.message, "E", popupPrefix);
                        }
                    },
                });
                //count file
                c++;
            },
            type: 'POST',
            dataType: 'JSON',
            contentType: false,
            url: '@Url.Action("UploadFileToTemp", "Attachment", new { Area = "Shared" })',
            autoUpload: true,
            formData: function () {
                console.log($(this))
                var inputElem = $(this)[c].fileInput;
                var attachmentDivID = getAttachmentDivID(inputElem);

                var arr = [];
                arr.push({ name: "savedFilename", value: $(attachmentDivID + "#lastSavedFilename").val() });
                return arr;
            },
            success: function (response) {

                var inputElem = $(this)[c].fileInput;
                var attachmentDivID = getAttachmentDivID(inputElem);

                if (response != null && response.success) {
                    waitForElement(attachmentDivID + "#filedownloadurl_" + response.fileUniqueKey, 0, function () {
                        $(attachmentDivID + "#filename_" + response.fileUniqueKey).hide()
                        $(attachmentDivID + "#filedownloadurl_" + response.fileUniqueKey).show()
                        $(attachmentDivID + "a#filedownloadurl_" + response.fileUniqueKey).attr('href', response.downloadURL);
                        $(attachmentDivID + "#downloadurl_" + response.fileUniqueKey).val(response.downloadURL);

                        var attachmentGroup = attachmentDivID.replace('#', '').replace(' ', '');

                        $(attachmentDivID + "#attachmentgroup_" + response.fileUniqueKey).val(attachmentGroup);

                        //Callback function
                        if ($.isFunction(window.callbackAddAttachFile)) {
                            callbackAddAttachFile();
                        }
                    });

                } else {
                    c = 0;
                }
            },
            error: function (error) {
                //alert("เกิดข้อผิดพลาด โปรดตรวจสอบเอกสารแนบที่เลือก");
                //displayErrorPopup("เกิดข้อผิดพลาด โปรดตรวจสอบเอกสารแนบที่เลือก");
            }
        }).on('fileuploadsubmit', function (e, data) {

        }).on('fileuploaddone', function (e, data) {

        }).on('fileuploadfail', function (e, data) {
            ;
            var attachmentDivID = getAttachmentDivID($(this));

            $(attachmentDivID + "#fileerror_" + data.files[0].uploadID).text("- error");
            //Set error flag
            $(attachmentDivID + "#error_" + data.files[0].uploadID).val(true);
        }).on('fileuploadalways', function (e, data) {
            if (data.originalFiles.length == 1) {
                debugger;
                var attachmentDivID = getAttachmentDivID($(this));

                waitForElement(attachmentDivID + "#filecon_" + data.files[0].uploadID, 0, function () {
                    $(attachmentDivID + "#filecon_" + data.files[0].uploadID).hide()
                    $(attachmentDivID + "#delfile_" + data.files[0].uploadID).show()

                });
            }

        }).on('fileuploadprogress', function (e, data) {
            if (data.originalFiles.length == 1) {


                var attachmentDivID = getAttachmentDivID($(this));

                var progress = parseInt(data.loaded / data.total * 100, 10);

                $(attachmentDivID + "#filecon_" + data.files[0].uploadID).show()

                $(attachmentDivID + '#fileprogress_' + data.files[0].uploadID).css(
                'width',
                progress + '%'
                );
            }
        });




    });
</script>